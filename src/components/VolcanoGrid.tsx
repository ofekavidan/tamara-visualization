// src/components/VolcanoGrid.tsx
"use client";

import React from "react";

type RNAClass = "tRFs" | "miRs" | "lncRNAs" | "mRNAs";
type Timepoint = "15min" | "30min" | "60min";

interface VolcanoGridProps {
  /** Which RNA class to render plots for */
  rnaClass: RNAClass;
  /** Optional heading above the grid */
  title?: string;
  /** Show small captions under each image */
  showCaptions?: boolean;
}

const TIMEPOINTS: Timepoint[] = ["15min", "30min", "60min"];

/**
 * Build the public path to the pre-rendered volcano PNG.
 * Expected filename convention (already generated by your Python script):
 *   <rnaClass>_<timepoint>_volcano.png
 * Examples:
 *   "tRFs_15min_volcano.png"
 *   "lncRNAs_30min_volcano.png"
 */
function volcanoPath(rnaClass: RNAClass, timepoint: Timepoint) {
  return `/volcano_plots/${rnaClass}_${timepoint}_volcano.png`;
}

/**
 * A tiny fallback that hides a broken image tile if an asset is missing.
 * (So the grid doesn't look broken when some files are not provided.)
 */
function hideIfBroken(e: React.SyntheticEvent<HTMLImageElement>) {
  const el = e.currentTarget;
  const container = el.closest("[data-volcano-tile]");
  if (container) container.setAttribute("data-hidden", "true");
}

export default function VolcanoGrid({
  rnaClass,
  title = "Volcano plots",
  showCaptions = true,
}: VolcanoGridProps) {
  return (
    <section className="w-full">
      <h3 className="text-2xl md:text-3xl font-semibold tracking-tight mb-4">
        {title}
      </h3>

      {/* axis description (matches the sketch) */}
      <p className="text-sm text-neutral-500 mb-4">
        x-axis: <span className="font-mono">log2(Fold Change)</span>, y-axis:{" "}
        <span className="font-mono">-log10(p-value)</span>
      </p>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {TIMEPOINTS.map((tp) => (
          <figure
            key={tp}
            data-volcano-tile
            className="rounded-2xl border border-neutral-200 shadow-sm overflow-hidden bg-white relative"
          >
            {/* Caption above image (15/30/60 min) */}
            {showCaptions && (
              <figcaption className="absolute left-3 top-3 text-sm font-medium bg-white/70 backdrop-blur px-2 py-0.5 rounded-md">
                {tp.replace("min", " min")}
              </figcaption>
            )}

            <img
              src={volcanoPath(rnaClass, tp)}
              alt={`${rnaClass} ${tp} volcano`}
              className="w-full h-auto block"
              onError={hideIfBroken}
              loading="lazy"
            />

            {/* Empty state if asset missing */}
            <div className="hidden data-[hidden=true]:flex absolute inset-0 items-center justify-center text-neutral-400 text-sm">
              No plot for {rnaClass} â€¢ {tp}
            </div>
          </figure>
        ))}
      </div>
    </section>
  );
}
